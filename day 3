Day 3 (Intermediate Level):*
1. Write a program to find the second largest element in an array.
2. Write a program to sort an array in ascending order using the bubble sort algorithm.
3. Write a program to reverse a linked list.
4. Write a program to find the factorial of a number using recursion.
5. Write a program to check if a given string is an anagram.

1.
a=list(map(int,input().split()))
n=len(a)
a.sort()
print(a[len(a)-2])
output:
7 8 9 4 5
8

2.

def bubblesort(a):
    for i in range(len(a)):
        for j in range(0,(len(a)-i-1)):
            if a[j]>a[j+1]:
                a[j],a[j+1]=a[j+1],a[j]
a=list(map(int,input().split()))
bubblesort(a)
print(a)
output:
7 6 4 8 9
[4, 6, 7, 8, 9]

3.
class Node:
    def __init__(self,data):
        self.data=data
        self.next=None

def display(head):
    current=head
    while current:
        print(current.data,end="->")
        current=current.next
    print("None")
def reverse(head):
    prev = None
    current = head

    while current:
        next_node = current.next
        current.next = prev
        prev = current
        current = next_node

    return prev
linked_list=Node(1)
linked_list.next=Node(2)
linked_list.next.next=Node(3)
linked_list.next.next.next=Node(4)
print("original")
display(linked_list)
reverse(linked_list)
print("reversed")
display(linked_list)

output:
1->2->3->4->5
5->4->3->2->1

4.
def fact(n):
    if n==1:
        return 1
    else:
        return n*fact(n-1)
n=int(input())
print(fact(n))
output:
5!
120 
5.
str1=input()
str2=input()
sort1=sorted(str1)
sort2=sorted(str2)
if(sort1==sort2):
    print("anagram")
else:
    print("not a anagram")

output:
eat
ate
anagram

